// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2992.Robot.subsystems;

import org.usfirst.frc2992.Robot.RobotMap;
import org.usfirst.frc2992.Robot.commands.*;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Intake extends Subsystem {
	final double feedSpeed = .4;
	final double feedConstant = 1;
	
	double feedValue = 0;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController feedLeftMotor = RobotMap.intakeFeedLeftMotor;
    private final SpeedController feedRightMotor = RobotMap.intakeFeedRightMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    	setDefaultCommand(new FeedWheelsSticks());
    }
    public void Intake() {
    	
    }
    
    public void FeedIn() {
    	feedLeftMotor.set(feedSpeed);
    	feedRightMotor.set(-feedSpeed);
    	feedValue = feedSpeed;
    }
    public void FeedOut() {
    	feedLeftMotor.set(-feedSpeed);
    	feedRightMotor.set(feedSpeed);
    	feedValue = - feedSpeed;
    	
    }
    public void FeedOff() {
    	feedLeftMotor.set(0);
    	feedRightMotor.set(0);
    	feedValue = 0;
    }
    
    public void FeedControl(double speed){
    	feedValue = feedConstant * (-speed + 1)/2;
    	feedLeftMotor.set(-feedValue);
    	feedRightMotor.set(feedValue);
    }
    
    public double getFeedSpeed(){
    	return feedValue;
    }
}

